 <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">


import { Component, OnInit } from '@angular/core';
import { FormGroup, FormControl } from '@angular/forms';


@Component({
  selector: 'app-blog-editor',
  templateUrl: './blog-editor.component.html',
  styleUrls: ['./blog-editor.component.css']
})
export class BlogEditorComponent implements OnInit {
  
 editorForm: FormGroup;
 editorContent: string;

   editorStyle={
   height: '300px' 
  }
  
  config ={
  toolbar: [
    ['bold', 'italic', 'underline'] ]
  }

    ngOnInit() {
      this.editorForm = new FormGroup({
      'editor': new FormControl(null)})
      }
    
    
    onSubmit() {
    this.editorContent = this.editorForm.get('editor').value;
    console.log(this.editorForm.get('editor').value);
    }
    maxLength(e) {
    if(e.editor.getLength() > 1000) {
    e.editor.deleteText(10, e.editor.getLength());
    }
  } 

}


HTML


<div class="container">
   <div class="row pt-5">
     <div class="col-md-8">
        <form [formGroup]="editorForm" (ngSubmit)="onSubmit()">
          <div class="form-group">
              <label for="editor"><h3>Editor</h3></label>
              <quill-editor [style]="editorStyle" [modules]="config" (onContentChanged)="maxLength($event)" formControlName="editor">  </quill-editor>
              <span *ngIf="editorForm.get('editor').value != null">{{ 10 - editorForm.get('editor').value. length }}</span>
            </div>
            <button class="btn btn-primary mt-3">Submit</button>
       </form>
     </div>
     <div class="col-md-4 bg-light p-4">
        | <h3>Output</h3>
        <p class="my-5" [innerHTML]="editorContent"></p>
        </div>
     </div>
</div>



<ng-container *ngFor="let pd of postService.posts">
                <label [innerHtml]="pd.PostBody"></label>
               
              </ng-container>




<div class="card my-4">
    <h5 class="card-header">Leave a Comment:</h5>
    <div class="card-body">
      <form>
        <div class="form-group">
          <textarea class="form-control" rows="3"></textarea>
        </div>
        <button type="submit" class="btn btn-primary" disabled>Submit</button>
      </form>
    </div>
  </div>


<div class="form-group col-md-8">
                    <label>Title</label>
                    <input class="form-control" name="Title" [(ngModel)]="Title" required>
               </div>


Id 
PostBody 
PostPicture 
AuthorId
ProfileViewModel Author 
DateTime? DateCreate 
DateTime? LastEdit        
ICollection<CommentViewModel> Comments         
string Hashtags 


PostBody: string;
  PostPicture: string;
  AuthorId: number;
  Author: UserDetails;
  DateCreate: Date;
  LastEdit: Date;
  Comments: Comment[];
  Hashtags: string; 



     <table>       
         <tr>
             <th>Post</th>
             <th>Date Create</th>
             <th>Hashtag</th>              
         </tr>
        <tr *ngFor="let pd of postService.posts">
          <td (click)="populateForm(pd)"><label [innerHtml]="pd.PostBody"></label></td>
          <td>{{pd.DateCreate | date : "MMM d, y"}}</td>
          <td>{{pd.Hashtags}}</td>          
        </tr>
      </table>




<input type="text" class ="te" [value]="name" />
      <h1>Добро пожаловать {{name}}!</h1>
      
      <div>
            <input [(ngModel)] = "value1">
            <button (click)="search()">Search</button>
     </div>


// addItem(text: string){
  //   this.name = text;
  // }
  // search(){   
  //   console.log(this.value1);
  //   this.name = this.value1;
  // }


  <div class="form-group col-md-8">
        <label>Title</label>
        <input class="form-control" name="Title" [(ngModel)]="Title" required>
      </div>
